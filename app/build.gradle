apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.appdistribution'

def keystorePropertiesFile = rootProject.file("keystore.properties")

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.ogl4jo3.accounting"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 2
        versionName "0.0.2"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    signingConfigs {
        release {
            if (keystorePropertiesFile.canRead()) {
                def properties = new Properties()
                properties.load(new FileInputStream(keystorePropertiesFile))
                keyAlias properties['keyAlias']
                keyPassword properties['keyPassword']
                storeFile file(properties['storeFile'])
                storePassword properties['storePassword']
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '.debug'
            firebaseAppDistribution {
                releaseNotes = "Release Notes: from gradle auto build & upload."
                groups = "qa"
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            firebaseAppDistribution {
//                artifactType = "AAB"
                releaseNotes = "Release Notes: from gradle auto build & upload."
                groups = "qa"
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        free {
            dimension "default"
            applicationIdSuffix = ".free"

        }
        pro {
            dimension "default"
            applicationIdSuffix = ".pro"

        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    // Kotlin
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.preference:preference-ktx:1.1.1"

    implementation 'androidx.annotation:annotation:1.2.0'

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // Koin AndroidX Scope features
    implementation "org.koin:koin-androidx-scope:$koin_version"
    // Koin AndroidX ViewModel features
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    // Koin AndroidX Fragment features
    implementation "org.koin:koin-androidx-fragment:$koin_version"
    // Koin AndroidX WorkManager
    implementation "org.koin:koin-androidx-workmanager:$koin_version"
    // Koin AndroidX Jetpack Compose
    implementation "org.koin:koin-androidx-compose:$koin_version"
    // Koin AndroidX Experimental features
    implementation "org.koin:koin-androidx-ext:$koin_version"

    //Timber for log
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:28.3.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.test:core:1.3.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation "android.arch.core:core-testing:1.1.1"
    // Room Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.room:room-testing:2.3.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0"
    androidTestImplementation "androidx.navigation:navigation-testing:2.3.5"
    debugImplementation "androidx.fragment:fragment-testing:1.3.5"

}
